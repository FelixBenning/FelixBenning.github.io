<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>maths on Felix' Blog</title><link>https://felixbenning.github.io/tags/maths/</link><description>Recent content in maths on Felix' Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sat, 03 Oct 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://felixbenning.github.io/tags/maths/index.xml" rel="self" type="application/rss+xml"/><item><title>Intuitive Indexing</title><link>https://felixbenning.github.io/blog/programming/intuitive-indexing/</link><pubDate>Sat, 03 Oct 2020 00:00:00 +0000</pubDate><guid>https://felixbenning.github.io/blog/programming/intuitive-indexing/</guid><description>&lt;p>While most programming languages use 0-based indexing. &lt;a href="https://hisham.hm/2021/01/18/again-on-0-based-vs-1-based-indexing/" target="_blank">Some people are not
convinced&lt;/a> that this is a good thing and not just the legacy of
the language C. They argue that starting to index with one is more &lt;em>intuitive&lt;/em>
than starting to index with zero, and that there is no good reason to use
0-based indices besides pointer arithmetic which should not be of concern to
higher level programming.&lt;/p>
&lt;p>And to be fair, proponents of zero based indexing have mostly failed to provide
a convincing argument for their preference (&lt;a href="#5-ranges">Dijkstra&amp;rsquo;s range
argument&lt;/a> aside). To remedy this, I am going to present 5 arguments
for 0-based indexing and address the intuition argument of 1-based
indexing.&lt;/p></description></item></channel></rss>